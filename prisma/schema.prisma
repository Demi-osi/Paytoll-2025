generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cards {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @db.Uuid
  card_number String    @db.VarChar
  expiry_date DateTime  @db.Date
  is_default  Boolean?  @default(false)
  created_at  DateTime? @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6)
  updated_at  DateTime? @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name    String     @db.VarChar(100)
  last_name     String     @db.VarChar(100)
  email         String     @unique @db.VarChar(255)
  password_hash String
  balance       Decimal?   @default(0.00) @db.Decimal(10, 2)
  address       String?
  role          String?    @default("user") @db.VarChar(50)
  created_at    DateTime?  @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6)
  cards         cards[]
  vehicles      vehicles[]
}

/// This table contains check constraints and requires additional setup for migrations. 
model vehicles {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String    @db.Uuid
  license_plate String    @unique @db.VarChar
  make          String    @db.VarChar
  model         String    @db.VarChar
  year          Int?
  toll_balance  Decimal?  @default(0.00) @db.Decimal(10, 2)
  tolls         Json      @default("{}") 
  created_at    DateTime? @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6)
  updated_at    DateTime? @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6)
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions  transactions[]
}

model transactions {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  vehicle_id        String    @db.Uuid
  amount            Decimal   @db.Decimal(10, 2)
  location          String    @db.VarChar(255) // Could be a toll location or additional info
  toll_name         String?    @db.VarChar(255) // Toll name field
  license_plate     String?    @db.VarChar(20)  // License plate
  toll_incurred_at  DateTime  @db.Timestamp(6) // Shortened date toll incurred
  date_paid         DateTime  @default(dbgenerated("TIMEZONE('Africa/Johannesburg', NOW())")) @db.Timestamp(6) // Date the payment was made
  
  vehicles          vehicles  @relation(fields: [vehicle_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

